@model Iris.Model.AdminModel.AddUpdateArticleModel

<div class="container-fluid" id="div-user-detail">
    @using (Html.AjaxBeginForm("Add", "Article", new AjaxOptions { UpdateTargetId = "result", InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnBegin = "showLoading", OnComplete = "hideLoading" }, new { @class = "form-horizontal", id = "add-user-form" }))
    {
        @Html.AntiForgeryToken()
        <div class="control-group">
            <label class="control-label" for="Title">عنوان مطلب</label>
            <div class="controls">
                @Html.TextBoxFor(article => article.Title, new { placeholder = "عنوان مطلب", @class = "input-xxlarge" })
            </div>
            @Html.ValidationMessageFor(article => article.Title)
        </div>
        
        <div class="control-group">
            <label for="Body">متن مطلب</label>
            <div class="controls" style="margin-right: 0">
                @Html.TextAreaFor(article => article.Body, new { style = "height: 300px;" })
            </div>
            @Html.ValidationMessageFor(article => article.Body)
        </div>
        
        <div class="control-group">
            <label class="control-label" for="Keywords">کلمات کلیدی</label>
            <div class="control">
                @Html.TextBoxFor(article => article.Keywords, new { placeholder = "کلمات کلیدی", @class = "input-xxlarge", title = "کلمات کلیدی را با , از یکدیگر جدا کنید" })
            </div>
            @Html.ValidationMessageFor(article => article.Keywords)
        </div>
        <div class="control-group">
            <label class="control-label" for="Description">توضیحات</label>
            <div class="controls">
                @Html.TextAreaFor(article => article.Description, new { placeholder = "توضیحات", @class = "input-xxlarge" })
            </div>
            @Html.ValidationMessageFor(article => article.Description)
        </div>
        <div class="control-group">
            <label class="control-label" for="CategoryId">دسته بندی</label>
            <div class="controls">
                @Html.DropDownListFor(article => article.CategoryId, ViewBag.CategoriesDropDownList as SelectList)
            </div>
            @Html.ValidationMessageFor(article => article.CategoryId)
        </div>
        <div class="control-group">
            <label class="control-label" for="ArticleStatus">وضعیت برگه</label>
            <div class="controls">
                @Html.DropDownListFor(article => article.ArticleStatus, ViewBag.ArticleStatus as IEnumerable<SelectListItem>)
            </div>
            @Html.ValidationMessageFor(article => article.ArticleStatus)
        </div>
        <div class="control-group">
            <label class="control-label" for="CommentStatus">وضعیت نظرات</label>
            <div class="controls">
                @Html.DropDownListFor(article => article.CommentStatus, ViewBag.CommentStatus as IEnumerable<SelectListItem>)
            </div>
            @Html.ValidationMessageFor(article => article.CommentStatus)
        </div>
        <div id="result"></div>
        <input type="submit" name="btn-submit" value="افزودن" class="btn btn-success" />
        <input type="button" name="btn-colose" id="btn-close" value="انصراف" class="btn btn-danger" onclick="$dialog.dialog('close');" />
    }

</div>
<script>
    run(function () { loadRedactor('#Body'); });
</script>
