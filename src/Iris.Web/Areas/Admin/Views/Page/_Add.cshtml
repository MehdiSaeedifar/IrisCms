@model Iris.Model.AdminModel.AddPageModel

<div class="container-fluid" id="div-user-detail">
    @using (Html.AjaxBeginForm("Add", "Page", new AjaxOptions { UpdateTargetId = "result", InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnBegin = "showLoading", OnComplete = "hideLoading" }, new { @class = "form-horizontal", id = "add-user-form" }))
    {
        @Html.AntiForgeryToken()
        <div class="control-group">
            <label class="control-label" for="Title">عنوان برگه</label>
            <div class="controls">
                @Html.TextBoxFor(page => page.Title, new { placeholder = "عنوان برگه", @class = "input-xxlarge" })
            </div>
            @Html.ValidationMessageFor(page => page.Title)
        </div>
        
        <div class="control-group">
            <label for="Body">متن برگه</label>
            <div class="controls" style="margin-right: 0px">
                @Html.TextAreaFor(page => page.Body, new { style = "height: 300px;" })
            </div>
            @Html.ValidationMessageFor(page => page.Body)
        </div>
        
        <div class="control-group">
            <label class="control-label" for="Keyword">کلمات کلیدی</label>
            <div class="control">
                @Html.TextBoxFor(page => page.Keyword, new { placeholder = "کلمات کلیدی", @class = "input-xxlarge", title = "کلمات کلیدی را با , از یکدیگر جدا کنید" })
            </div>
            @Html.ValidationMessageFor(page => page.Keyword)
        </div>
        <div class="control-group">
            <label class="control-label" for="Description">توضیحات</label>
            <div class="controls">
                @Html.TextAreaFor(page => page.Description, new { placeholder = "توضیحات", @class = "input-xxlarge" })
            </div>
            @Html.ValidationMessageFor(page => page.Description)
        </div>
        <div class="control-group">
            <label class="control-label" for="ParrentId">مادر</label>
            <div class="controls">
                @Html.DropDownListFor(page => page.ParentId, ViewBag.ParentPagesList as SelectList)
            </div>
            @Html.ValidationMessageFor(page => page.ParentId)
        </div>
        <div class="control-group">
            <label class="control-label" for="Status">وضعیت برگه</label>
            <div class="controls">
                @Html.DropDownListFor(page => page.Status, ViewBag.PageStatus as IEnumerable<SelectListItem>)
            </div>
            @Html.ValidationMessageFor(page => page.Status)
        </div>
        <div class="control-group">
            <label class="control-label" for="PostCommentStatus">وضعیت نظرات</label>
            <div class="controls">
                @Html.DropDownListFor(page => page.CommentStatus, ViewBag.CommentStatus as IEnumerable<SelectListItem>)
            </div>
            @Html.ValidationMessageFor(page => page.CommentStatus)
        </div>
        <div class="control-group">
            <label class="control-label" for="Order">ترتیب</label>
            <div class="controls">
                @Html.TextBoxFor(page => page.Order, new { @class = "input-mini" })
            </div>
            @Html.ValidationMessageFor(page => page.Order)
        </div>
        <div id="result"></div>
        <input type="submit" name="btn-submit" value="افزودن" class="btn btn-success" />
        <input type="button" name="btn-colose" id="btn-close" value="انصراف" class="btn btn-danger" onclick="$dialog.dialog('close');" />
    }

</div>
<script>
    run(function () { loadRedactor('#Body') });
</script>
